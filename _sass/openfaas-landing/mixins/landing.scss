@mixin box-sizing($box-model) {
    -webkit-box-sizing: $box-model; // Safari <= 5
    -moz-box-sizing: $box-model; // Firefox <= 19
    box-sizing: $box-model;
}

@mixin desaturate() {
    -webkit-filter: grayscale(1);
    -webkit-filter: grayscale(100%);
    filter: gray;
    filter: grayscale(100%);
    filter: url(desaturate.svg#greyscale);
}

@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin fadein($duration: 0.25) {
    transition: opacity $duration+s linear;
    -moz-transition: opacity $duration+s linear;
    -webkit-transition: opacity $duration+s linear;
}

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin reset-list() {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow: inset $top $left $blur $color;
        -moz-box-shadow: inset $top $left $blur $color;
        box-shadow: inset $top $left $blur $color;
    }
    @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}

// @mixin transition($duration: 0.2) {
//     -webkit-transition: all $duration+s ease-in-out;
//     -ms-transition: all $duration+s ease-in-out;
//     -moz-transition: all $duration+s ease-in-out;
//     -o-transition: all $duration+s ease-in-out;
//     transition: all $duration+s ease-in-out;
// }

@mixin respond-to($point:medium) {
    @if $point==large {
        @media screen and (min-width: 64em) {
            @content;
        }
    }
    @else if $point==medium {
        @media screen and (min-width: 40em) and (max-width: 63.9375em) {
            @content;
        }
    }
    @else if $point==small {
        @media screen and (max-width: 39.9375em) {
            @content;
        }
    }
}

.hide-desktop {
    @include respond-to(large){
        display: none!important;
    }
}
.hide-tablet {
    @include respond-to(medium){
        display: none!important;
    }
}
.hide-phone {
    @include respond-to(small){
        display: none!important;
    }
}

@mixin make-margin-bottom($i:10) {
    @for $i from 0 through 10 {
        $mb : $i*10px;
        .mb#{$i*10} {  
            margin-bottom: $mb!important;
        }
    }
}

@mixin make-margin-top($i:10) {
    @for $i from 0 through 10 {
        $mt : $i*10px;
        .mt#{$i*10} {  
            margin-top: $mt!important;
        }
    }
}

@mixin make-margin-left($i:10) {
    @for $i from 0 through 10 {
        $mt : $i*10px;
        .ml#{$i*10} {  
            margin-left: $mt!important;
        }
    }
}

@mixin make-margin-right($i:10) {
    @for $i from 0 through 10 {
        $mt : $i*10px;
        .mr#{$i*10} {  
            margin-right: $mt!important;
        }
    }
}

@mixin make-padding-bottom($i:10) {
    @for $i from 0 through 10 {
        $mb : $i*10px;
        .pb#{$i*10} {  
            padding-bottom: $mb!important;
        }
    }
}

@mixin make-padding-top($i:10) {
    @for $i from 0 through 10 {
        $mt : $i*10px;
        .pt#{$i*10} {  
            padding-top: $mt!important;
        }
    }
}

@mixin make-padding-left($i:10) {
    @for $i from 0 through 10 {
        $mt : $i*10px;
        .pl#{$i*10} {  
            padding-left: $mt!important;
        }
    }
}

@mixin make-padding-right($i:10) {
    @for $i from 0 through 10 {
        $mt : $i*10px;
        .pr#{$i*10} {  
            padding-right: $mt!important;
        }
    }
}

@include make-margin-bottom();
@include make-margin-top();
@include make-margin-left();
@include make-margin-right();

@include make-padding-bottom();
@include make-padding-top();
@include make-padding-left();
@include make-padding-right();

.fr {
    float: right;
}

.fl {
    float: left;
}

.center {
    text-align: center;
}

@mixin rem($px) {
    $base:16;
    $r:1;
    
    $r:$px/$base;

    font-size:$r*1rem;
}

@mixin btn() {
    border:2px solid #fff;
    border-radius:5px;
    text-transform: uppercase;
    color:#fff;
    font-size:17px;
    line-height: 1;
    padding: 15px 35px;
    font-weight:600;
    // @include transition;
}

.btn {
    @include btn();
}
.btn-alt {
    border:2px solid #000;
    color:#000;
}